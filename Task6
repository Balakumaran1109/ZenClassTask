1) https://github.com/rvsp/typescript-oops/blob/master/Practice/Movie.md


class Movie {
    constructor(title, studio, rating = "PG") {
        this.title = title;
        this.studio = studio;
        this.rating = rating;
    }

    static getPG(movieArray) {
        return movieArray.filter(movie => movie.rating === "PG");
    }
}

const movie1 = new Movie("Inception", "Warner Bros.", "PG-13");
const movie2 = new Movie("The Dark Knight", "Warner Bros.");
const movie3 = new Movie("Finding Nemo", "Pixar", "G");

const movies = [movie1, movie2, movie3];

const pgMovies = Movie.getPG(movies);
console.log(pgMovies);



2) https://github.com/rvsp/typescript-oops/blob/master/Practice/class-circle.md
Convert the UML diagram to Typescript class. - use number for double


class Circle {
    constructor(radius, color){
        this._radius = radius;
        this._color = color;
    }

    get radius(){
        return this._radius;
    }

    set radius(radius){
        this._radius = radius;
    }

    get color(){
        return this._color;
    }

    set color(color){
        this._color = color;
    }

    tostring(){
        return `Circle radius : ${this._radius} , color : ${this.color}`
    }

    getArea(){
        let Area = Math.PI * this._radius * this._radius
        return Area.toFixed(2)
    }

    getCircumference(){
        let Circumference = 2 * Math.PI * this._radius
        return Circumference.toFixed(2)
    }
    
}

let objCircle = new Circle(1,"red");
console.log(objCircle.tostring())
console.log(objCircle.getArea())
console.log(objCircle.getCircumference()) 

objCircle.radius = 5;
objCircle.color = "blue";

console.log(objCircle.tostring())
console.log(objCircle.getArea())
console.log(objCircle.getCircumference()) 



3) Write a “person” class to hold all the details.


class Person{
    constructor(name, age, dob, mobile, email){
        this.name = name;
        this.age = age;
        this.dob = dob;
        this.mobile = mobile;
        this.email = email;
    }

        getDetails(){
            console.log(`Name : ${this.name}, Age : ${this.age}, DOB : ${this.dob}, Mobile : ${this.mobile}, Email : ${this.email}`)
        }
    }
    let obj = new Person("john", 24, "22/12/1998", 8281769984, "john22@gmail.com")
    obj.getDetails()



4) Write a class to calculate the uber price.


class UberPriceCalculator{
    constructor(basefare, costPerKm, costPerMin){
    this._basefare = basefare;
    this._costPerKm = costPerKm;
    this._costPerMin = costPerMin;
    }

    rateCalculator(totalKm, totalDuration){
       let distanceFare = this._costPerKm * totalKm;
       let durationFare = this._costPerMin * totalDuration;

       let totalFare = this._basefare + distanceFare + durationFare;
        return "Total ride fare is : " + totalFare + " " + "rs";
    }
}

let calculator = new UberPriceCalculator(50, 10, 1)

console.log(calculator.rateCalculator(15, 30))
